apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-transform-
spec:
  entrypoint: artifact-example
  templates:
  - name: artifact-example
    steps:
    - - name: generate-artifact
        template: transform
    - - name: consume-artifact
        template: print-message
        arguments:
          artifacts:
          # bind message to the hello-art artifact
          # generated by the generate-artifact step
          - name: message
            from: "{{steps.generate-artifact.outputs.artifacts.hello-art}}"

  - name: transform
    container:
      image: heyleke/argocd-kube-tools-plugin:0.0.2
      command: [sh, -c]
      args: ["sha256sum-transformer.py < /tmp/some_yaml > /tmp/output"]
    inputs:
      artifacts:
      - name: some-yaml
        path: /tmp/some_yaml
        s3:
          bucket: my-bucket
          key: some_yaml
          endpoint: argo-artifacts.default:9000
          insecure: true
          accessKeySecret:
            name: my-minio-cred
            key: accesskey
          secretKeySecret:
            name: my-minio-cred
            key: secretkey
    outputs:
      artifacts:
      # generate hello-art artifact from /tmp/hello_world.txt
      # artifacts can be directories as well as files
      - name: hello-art
        path: /tmp/output

  - name: print-message
    inputs:
      artifacts:
      # unpack the message input artifact
      # and put it at /tmp/message
      - name: message
        path: /tmp/message
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cat /tmp/message"]
